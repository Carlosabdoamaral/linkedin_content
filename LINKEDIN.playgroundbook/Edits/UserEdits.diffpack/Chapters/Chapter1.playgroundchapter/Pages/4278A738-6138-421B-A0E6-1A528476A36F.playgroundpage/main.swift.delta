<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/*https://codeforces.com/problemset/problem/236/A
 Those days, many boys use beautiful girls' photos as avatars in forums. So it is pretty hard to tell the gender of a user at the first glance.
 Last year, our hero went to a forum and had a nice chat with a beauty (he thought so). After that they talked very often and eventually they 
 became a couple in the network.
 
 But yesterday, he came to see "her" in the real world and found out "she" is actually a very strong man! Our hero is very sad and he is too tired
 to love again now. So he came up with a way to recognize users' genders by their user names.
 
 This is his method: if the number of distinct characters in one's user name is odd, then he is a male, otherwise she is a female. You are given 
 the string that denotes the user name, please help our hero to determine the gender of this user by his method.
 
 Input
 The first line contains a non-empty string, that contains only lowercase English letters â€” the user name. This string contains at most 100 letters.
 
 Output
 If it is a female by our hero's method, print "CHAT WITH HER!" (without the quotes), otherwise, print "IGNORE HIM!" (without the quotes).
 */


func boyOrGirl(u : String) -&gt; String {
    var dc : Int = 0
    var i : Int = 0
    var arr : [Character] = []
    
    for k in u {
        arr.append(k)
    }
    
    while i &lt; u.count {
        
        
        i+=1
    }
    
    if dc.isMultiple(of: 2) {
        return "CHAT WITH HER!"
    } else {
        return "IGNORE HIM"
    }
}

print(boyOrGirl(u: "xiaodao"))
</string>
			<key>ModifiedRange</key>
			<string>{1, 1562}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
